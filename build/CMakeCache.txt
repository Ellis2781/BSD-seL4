# This is the CMakeCache file.
# For build in directory: /home/kc/Sel4-bsd/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
BF_GEN_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/bitfield_gen.py

//Path to a file.
BUILD_SCRIPT_IN:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/buildScript.sml.in

//Path to a program.
CAKEML_BIN:FILEPATH=CAKEML_BIN-NOTFOUND

//Path to a program.
CCACHE:FILEPATH=CCACHE-NOTFOUND

//Path to a file.
CIRCULAR_INCLUDES:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/circular_includes.py

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/sbin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/sbin/ar

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_AR:FILEPATH=/sbin/gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_RANLIB:FILEPATH=/sbin/gcc-ranlib

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/sbin/gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/sbin/gcc-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/sbin/gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/sbin/gcc-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/sbin/ld

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/sbin/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/sbin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/sbin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/sbin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=sel4-application

//Path to a program.
CMAKE_RANLIB:FILEPATH=/sbin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/sbin/readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/sbin/strip

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=/home/kc/Sel4-bsd/kernel/gcc.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Set USES_TERMINAL on specially marked tasks. This makes the task
// run in the foreground and can directly access stdio. This is
// helpful for debugging tasks that take a long time, or want to
// insert a breakpoint into the process. Note: Only one task can
// run in foreground at a time.
CMakeForegroundComplexCommands:BOOL=OFF

//Path to a file.
CONFIGURE_FILE_SCRIPT:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/configure_file.cmake

//Path to a file.
CPP_GEN_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/cpp_gen.sh

CSPEC_DIR:PATH=.

//Path to a file.
CUSTOM_POLLY_TOOLCHAINS:PATH=/home/kc/Sel4-bsd/tools/cmake-tool/polly_toolchains

//Path to a file.
DTS_PATH:PATH=/home/kc/Sel4-bsd/kernel/tools/dts

//Always produce ANSI-colored output.
FORCE_COLORED_OUTPUT:BOOL=OFF

//Path to a file.
GDB_SCRIPT:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/simulate_scripts/launch_gdb.py

//Path to a file.
HARDWARE_GEN_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/hardware_gen.py

//Path to a file.
HOLMAKEFILE_IN:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/Holmakefile.in

//Path to a program.
HOLMAKE_BIN:FILEPATH=HOLMAKE_BIN-NOTFOUND

//Path to a file.
INVOCATION_ID_GEN_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/invocation_header_gen.py

//Path to a file.
KERNEL_FLAGS_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/flags.cmake

//Path to a file.
KERNEL_HELPERS_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/helpers.cmake

//Path to a file.
KERNEL_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel

KernelArch:STRING=x86

//Enable benchmarks including logging and tracing info.     Setting
// this value > 1 enables a 1MB log buffer and functions for extracting
// data from it     at user level. NOTE this is only tested on
// the sabre and will not work on platforms with < 512mb memory.
//     This is not fully implemented for x86.     none -> No Benchmarking
// features enabled.     generic -> Enable global benchmarks config
// variable with no specific features.     track_kernel_entries
// -> Log kernel entries information including timing, number of
// invocations and arguments for     system calls, interrupts,
// user faults and VM faults.     tracepoints -> Enable manually
// inserted tracepoints that the kernel will track time consumed
// between.     track_utilisation -> Enable the kernel to track
// each thread's utilisation time.
KernelBenchmarks:STRING=none

//Define cache line size for the current architecture
KernelCacheLnSz:STRING=64

//Define a __clzsi2 function to count leading zeros for uint32_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelClz32:BOOL=OFF

//Define a __clzdi2 function to count leading zeros for uint64_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelClz64:BOOL=OFF

//Expose implementations of clzl and clzll to verification by avoiding
// the use      of __builtin_clzl and __builtin_clzll.
KernelClzNoBuiltin:BOOL=OFF

//Define a __ctzsi2 function to count trailing zeros for uint32_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelCtz32:BOOL=OFF

//Define a __ctzdi2 function to count trailing zeros for uint64_t
// arguments.                         Only needed on platforms
// which lack a builtin instruction.
KernelCtz64:BOOL=OFF

//Expose implementations of ctzl and ctzll to verification by avoiding
// the use      of __builtin_ctzl and __builtin_ctzll.
KernelCtzNoBuiltin:BOOL=OFF

//On ia32 platforms, this option disables the L2 hardware prefetcher,
// the L2 adjacent     cache line prefetcher, the DCU prefetcher
// and the DCU IP prefetcher. On the cortex     a53 this disables
// the L1 Data prefetcher.
KernelDebugDisablePrefetchers:BOOL=OFF

//A C file providing the symbols ksDomSchedule and ksDomeScheudleLength
//         to be linked with the kernel as a scheduling configuration.
KernelDomainSchedule:FILEPATH=/home/kc/Sel4-bsd/kernel/src/config/default_domain.c

//Grant user access to the Performance Monitoring Counters.
//\n    This allows the user to read performance counters, although
//\n    not control what the counters are and whether or not they
//\n    are counting. Nevertheless whilst this is useful for
//\n    evalulating performance this option opens timing and covert
//\n    channels.
KernelExportPMCUser:BOOL=OFF

//Choose the method that FPU state is stored in. This     directly
// affects the method used to save and restore it.     FXSAVE ->
// This chooses the legacy 512-byte region used by the fxsave and
// fxrstor functions     XSAVE -> This chooses the variable xsave
// region, and enables the ability to use any     of the xsave
// variants to save and restore. The actual size of the region
// is dependent on     the features enabled.
KernelFPU:STRING=XSAVE

//This option is a heuristic to attempt to detect when the FPU
// is no longer in use,    allowing the kernel to save the FPU
// state out so that the FPU does not have to be    enabled/disabled
// every thread swith. Every time we restore a thread and there
// is    active FPU state, we increment this setting and if it
// exceeds this threshold we    switch to the NULL state.
KernelFPUMaxRestoresSinceSwitch:STRING=64

//There are three ways to to set FS/GS base addresses:     IA32_FS/GS_GDT,
// IA32_FS/GS_BASE_MSR, and fsgsbase instructions.     IA32_FS/GS_GDT
// and IA32_FS/GS_BASE_MSR are availble for 32-bit.     IA32_FS/GS_BASE_MSR
// and fsgsbase instructions are available for 64-bit.
KernelFSGSBase:STRING=inst

//Enable -fwhole-program when linking kernel. This should work
// modulo gcc bugs, which     are not uncommon with -fwhole-program.
// Consider this feature experimental!
KernelFWholeProgram:BOOL=OFF

//Enable IPC fastpath
KernelFastpath:BOOL=ON

//Add support for 1GB huge page. Not all recent processor models
// support this feature.
KernelHugePage:BOOL=ON

//IOMMU support for VT-d enabled chipset
KernelIOMMU:BOOL=ON

//Select the IRQ controller seL4 will use. Code for others may
// still be included if     needed to disable at run time.    
// PIC -> Use the legacy PIC controller.     IOAPIC -> Use one
// or more IOAPIC controllers
KernelIRQController:STRING=IOAPIC

//Use the MCS kernel configuration, which is not verified.
KernelIsMCS:BOOL=OFF

//Select the mode local APIC will use. Not all machines support
// X2APIC mode.
KernelLAPICMode:STRING=XAPIC

//Max number of bootinfo untyped caps
KernelMaxNumBootinfoUntypedCaps:STRING=230

//Configure the maximum number of IOAPIC controllers that can be
// supported. SeL4     will detect IOAPICs regardless of whether
// the IOAPIC will actually be used as     the final IRQ controller.
KernelMaxNumIOAPIC:STRING=1

//Max number of CPU cores to boot
KernelMaxNumNodes:STRING=1

//Maximum number of work units (delete/revoke iterations) until
// the kernel checks for    pending interrupts (and preempts the
// currently running syscall if interrupts are pending).
KernelMaxNumWorkUnitsPerPreemption:STRING=100

//Setsthe maximum number of Reserved Memory Region Reporting structures
// we support     recording from the ACPI tables
KernelMaxRMRREntries:STRING=32

//Inserts a header that indicates to the bootloader that the kernel
// supports a multiboot 1 boot header
KernelMultiboot1Header:BOOL=ON

//Inserts a header that indicates to the bootloader that the kernel
// supports a multiboot 2 boot header.     This is can be enabled
// together with a multiboot 1 header and the boot loader may use
// either one
KernelMultiboot2Header:BOOL=ON

//The type of graphics mode to request from the boot loader. This
// is encoded into the     multiboot header and is merely a hint,
// the boot loader is free to ignore or set some     other mode
KernelMultibootGFXMode:STRING=none

//The number of scheduler domains in the system
KernelNumDomains:STRING=1

//The number of priority levels per domain. Valid range 1-256
KernelNumPriorities:STRING=256

//Select the kernel optimisation level
KernelOptimisation:STRING=-O2

//Provide a static definition of the TSC frequency (in Hz).   
//  If this isn't set then the boot code will try and read the
// frequency from a MSR.     If it can't calculate the frequency
// from a MSR then it will estimate it from running the PIT for
// about 200ms.
KernelPC99TSCFrequency:STRING=0

KernelPlatform:STRING=pc99

//Maximum size in bits of chunks of memory to zero before checking
// a preemption point.
KernelResetChunkBits:STRING=8

//Maximum number of objects that can be created in a single Retype()
// invocation.
KernelRetypeFanOutLimit:STRING=256

//Root CNode Size (2^n slots)     The acceptable range is 8-27
// and 7-26, for 32-bit and 64-bit respectively.     The root CNode
// needs at least enough space to contain up to BI_CAP_DYN_START.
KernelRootCNodeSizeBits:STRING=12

KernelSel4Arch:STRING=x86_64

//Prevent against the Meltdown vulnerability by using a reduced
// Static Kernel
//\n    Image and Micro-state window instead of having all kernel
// state in the kernel window.
//\n    This only needs to be enabled if deploying to a vulnerable
// processor
KernelSkimWindow:BOOL=ON

//This describes the log2 size of the kernel stack. Great care
// should be taken as    there is no guard below the stack so setting
// this too small will cause random    memory corruption
KernelStackBits:STRING=12

//Add support for PCIDs (aka hardware ASIDs). Not all processor
// models support this feature.
KernelSupportPCID:BOOL=ON

//The kernel only ever supports one method of performing syscalls
// at a time. This     config should be set to the most efficient
// one that is support by the hardware the     system will run
// on
KernelSyscall:STRING=syscall

//Number of timer ticks until a thread is preempted.
KernelTimeSlice:STRING=5

//Timer tick period in milliseconds
KernelTimerTickMS:STRING=2

//VTX support
KernelVTX:BOOL=OFF

//When enabled this configuration option prevents the usage of
// any other options that    would compromise the verification
// story of the kernel. Enabling this option does NOT    imply
// you are using a verified kernel.
KernelVerificationBuild:BOOL=ON

//rdmsr/wrmsr kernel interface. Provides a syscall interface for
// reading and writing arbitrary MSRs.
//\n    This is extremely dangerous as no checks are performed and
// exists
//\n    to aid debugging and benchmarking.
KernelX86DangerousMSR:BOOL=OFF

//Performs a IBPB on every context switch to prevent Spectre attacks
// between user
//\n    processes. This is extremely expensive and is recommended
// you only turn this on
//\n    if absolutely necessary.
//\n    Note that in a multicore environment you should also enable
// STIBP to prevent
//\n    other cores retraining the branch predictor even after context
// switch.
KernelX86IBPBOnContextSwitch:BOOL=OFF

//Indirect Branch Restricted Speculation mode
//\n    Used to prevent a user from manipulating the branch predictor
// to manipulate speculative
//\n    execution of other processes. On current processors IBRS
// has a prohibitive performance
//\n    penalty and it is recommended that it be disabled such that
// software mitigations are
//\n    used instead. Software mitigation is done by disabling jump
// tables (the only form of
//\n    indirect jump in seL4 except for 'ret') and flushing the
// RSB on vmexit. Flushing the RSB
//\n    at other times is not needed as seL4 does not switch kernel
// stacks and so is not
//\n    vulnerable to RSB underflow. The STIBP is essentially software
// mitigation but enables
//\n    the single thread isolation for branch predictions. This
// is only needed if attempting
//\n    to protect user level process from each other in a multicore
// environment.
KernelX86IBRSMode:STRING=ibrs_none

//Select the x86 micro architecture
KernelX86MicroArch:STRING=nehalem

//Flushes the RSB on context switch to prevent Spectre attacks
// between user processes.
//\n    Whilst not nearly as expensive as an IBPB it is not enabled
// by default as it is
//\n    largely pointless to flush the RSB without also doing an
// IBPB as the RSB is already
//\n    a harder attack vector.
KernelX86RSBOnContextSwitch:BOOL=OFF

//The XSAVE area supports multiple instructions to save
//\n        and restore to it. These instructions are dependent
// upon specific CPU support. See Chapter 13 of Volume        
// 1 of the Intel Architectures SOftware Developers Manual for
// discussion on the init and modified         optimizations. 
//        XSAVE -> Original XSAVE instruction. This is the only
// XSAVE instruction that is guaranteed to exist if           
//  XSAVE is present         XSAVEC -> Save state with compaction.
// This compaction has to do with minimizing the total size of
//             XSAVE buffer, if using non contiguous features,
// XSAVEC will attempt to use the init optimization           
//  when saving         XSAVEOPT -> Save state taking advantage
// of both the init optimization and modified optimization    
//     XSAVES -> Save state taking advantage of the modified optimization.
// This instruction is only             available in OS code, and
// is the preferred save method if it exists.
KernelXSave:STRING=XSAVEOPT

//XSAVE can save and restore the state for various features   
//  through the use of the feature mask. This config option represents
// the feature mask that we want to     support. The CPU must support
// all bits in this feature mask. Current known bits are      
//   0 - FPU         1 - SSE         2 - AVX         FPU and SSE
// is guaranteed to exist if XSAVE exists.
KernelXSaveFeatureSet:STRING=3

//The size of the XSAVE region. This is dependent upon the features
// in     XSAVE_FEATURE_SET that have been requested. Default is
// 576 for the FPU and SSE
//\n    state, unless XSAVE is not in use then it should be 512
// for the legacy FXSAVE region.
KernelXSaveSize:STRING=576

//OpenSBI Folder location
OPENSBI_PATH:STRING=/home/kc/Sel4-bsd/tools/opensbi

//Path to a file.
PKG_CONFIG_TEMPLATE:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/pkg-config.in

//Path to a file.
RUST_TARGET_PATH:PATH=/home/kc/Sel4-bsd/tools/cmake-tool/rust_targets

//No help, variable specified on the command line.
SEL4_CACHE_DIR:UNINITIALIZED=../.sel4_cache

//Path to a file.
SIMULATE_SCRIPT:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/simulate_scripts/simulate.py

SKIP_MODIFIES:BOOL=ON

SORRY_BITFIELD_PROOFS:BOOL=OFF

//Path to a file.
SYSCALL_ID_GEN_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/syscall_header_gen.py

//Path to a file.
TLS_ROOTSERVER:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/tls_rootserver.lds

//Path to a file.
UIMAGE_TOOL:FILEPATH=/home/kc/Sel4-bsd/tools/cmake-tool/helpers/make-uimage

//Path to a file.
UMM_TYPES:FILEPATH=UMM_TYPES-NOTFOUND

//Path to a file.
XMLLINT_PATH:FILEPATH=/home/kc/Sel4-bsd/kernel/tools/xmllint.sh

//Value Computed by CMake
elfloader_BINARY_DIR:STATIC=/home/kc/Sel4-bsd/build/elfloader-tool

//Value Computed by CMake
elfloader_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
elfloader_SOURCE_DIR:STATIC=/home/kc/Sel4-bsd/tools/elfloader-tool

//The directory containing a CMake configuration file for musllibc.
musllibc_DIR:PATH=musllibc_DIR-NOTFOUND

//Value Computed by CMake
seL4_BINARY_DIR:STATIC=/home/kc/Sel4-bsd/build/kernel

//Value Computed by CMake
seL4_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
seL4_SOURCE_DIR:STATIC=/home/kc/Sel4-bsd/kernel

//Value Computed by CMake
sel4-application_BINARY_DIR:STATIC=/home/kc/Sel4-bsd/build

//Value Computed by CMake
sel4-application_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
sel4-application_SOURCE_DIR:STATIC=/home/kc/Sel4-bsd


########################
# INTERNAL cache entries
########################

//Default ASM flags for compilation     (subset of flags used by
// the kernel build)
BASE_ASM_FLAGS:INTERNAL= -Wa,--64  -D__KERNEL_64__ -march=nehalem
//Default CXX flags for compilation
BASE_CXX_FLAGS:INTERNAL=  -m64  -D__KERNEL_64__ -march=nehalem
//Default C flags for compilation     (subset of flags used by
// the kernel)
BASE_C_FLAGS:INTERNAL= -m64  -D__KERNEL_64__ -march=nehalem
//Default flags for linker an elf binary application
BASE_EXE_LINKER_FLAGS:INTERNAL=' -D__KERNEL_64__ -march=nehalem  -Wl,-m,elf_x86_64 '
//ADVANCED property for variable: BF_GEN_PATH
BF_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CCACHE
CCACHE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CIRCULAR_INCLUDES
CIRCULAR_INCLUDES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_AR
CMAKE_ASM_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_RANLIB
CMAKE_ASM_COMPILER_RANLIB-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/kc/Sel4-bsd/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=22
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/kc/Sel4-bsd
//ADVANCED property for variable: CMAKE_INSTALL_PREFIX
CMAKE_INSTALL_PREFIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=3
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TOOLCHAIN_FILE
CMAKE_TOOLCHAIN_FILE-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/sbin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMakeForegroundComplexCommands
CMakeForegroundComplexCommands-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CONFIGURE_FILE_SCRIPT
CONFIGURE_FILE_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPP_GEN_PATH
CPP_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CSPEC_DIR
CSPEC_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FORCE_COLORED_OUTPUT
FORCE_COLORED_OUTPUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GDB_SCRIPT
GDB_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HARDWARE_GEN_PATH
HARDWARE_GEN_PATH-ADVANCED:INTERNAL=1
//Builds the kernel with support for a userspace debug API, which
// can     allows userspace processes to set breakpoints, watchpoints
// and to     single-step through thread execution.
HardwareDebugAPI:INTERNAL=OFF
HardwareDebugAPI_DISABLED:INTERNAL=TRUE
//ADVANCED property for variable: INVOCATION_ID_GEN_PATH
INVOCATION_ID_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: KERNEL_FLAGS_PATH
KERNEL_FLAGS_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: KERNEL_HELPERS_PATH
KERNEL_HELPERS_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: KERNEL_PATH
KERNEL_PATH-ADVANCED:INTERNAL=1
Kernel32:INTERNAL=OFF
Kernel64:INTERNAL=ON
KernelAArch64SErrorIgnore:INTERNAL=OFF
//STRINGS property for variable: KernelArch
KernelArch-STRINGS:INTERNAL=x86
KernelArchArmV7a:INTERNAL=OFF
KernelArchArmV7ve:INTERNAL=OFF
KernelArchArmV8a:INTERNAL=OFF
KernelArchX86:INTERNAL=ON
KernelArch_all_strings:INTERNAL=arm;riscv;x86
KernelArmCortexA15:INTERNAL=OFF
KernelArmCortexA35:INTERNAL=OFF
KernelArmCortexA53:INTERNAL=OFF
KernelArmCortexA55:INTERNAL=OFF
KernelArmCortexA57:INTERNAL=OFF
KernelArmCortexA7:INTERNAL=OFF
KernelArmCortexA72:INTERNAL=OFF
KernelArmCortexA8:INTERNAL=OFF
KernelArmCortexA9:INTERNAL=OFF
//STRINGS property for variable: KernelArmHikeyOutstandingPrefetchers
KernelArmHikeyOutstandingPrefetchers-STRINGS:INTERNAL=1;2;3;4;5;6;7
KernelArmHikeyOutstandingPrefetchers:INTERNAL=0
KernelArmHikeyOutstandingPrefetchers_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelArmHikeyPrefetcherNPFSTRM
KernelArmHikeyPrefetcherNPFSTRM-STRINGS:INTERNAL=1;2;3;4
KernelArmHikeyPrefetcherNPFSTRM:INTERNAL=0
KernelArmHikeyPrefetcherNPFSTRM_UNAVAILABLE:INTERNAL=ON
//Enable prefetch streams initated by STB access     Enable prefetch
// streams initated by STB access. Enabled is the reset value
KernelArmHikeyPrefetcherSTBPFDIS:INTERNAL=OFF
KernelArmHikeyPrefetcherSTBPFDIS_DISABLED:INTERNAL=TRUE
//Prefetcher to initated on a ReadUnique or ReadShared     Sets
// prefetcher to initated on a ReadUnique (n) or ReadShared (y)
//     ReadUnique is the reset value
KernelArmHikeyPrefetcherSTBPFRS:INTERNAL=OFF
KernelArmHikeyPrefetcherSTBPFRS_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelArmHikeyPrefetcherStride
KernelArmHikeyPrefetcherStride-STRINGS:INTERNAL=2;3
KernelArmHikeyPrefetcherStride:INTERNAL=0
KernelArmHikeyPrefetcherStride_UNAVAILABLE:INTERNAL=ON
KernelArmSMMU:INTERNAL=OFF
//STRINGS property for variable: KernelBenchmarks
KernelBenchmarks-STRINGS:INTERNAL=none
KernelBenchmarksNone:INTERNAL=ON
KernelBenchmarks_all_strings:INTERNAL=none;generic;track_kernel_entries;tracepoints;track_utilisation
KernelBootThreadTimeSlice_UNAVAILABLE:INTERNAL=ON
//In debug mode, seL4 prints diagnostic messages to its serial
// output describing,     e.g., the cause of system call errors.
// This setting determines whether ANSI escape     codes are applied
// to colour code these error messages. You may wish to disable
// this     setting if your serial output is redirected to a file
// or pipe.
KernelColourPrinting:INTERNAL=OFF
KernelColourPrinting_DISABLED:INTERNAL=TRUE
//Adds a system call that allows users to specify code to be run
// in kernel mode.     Useful for profiling.
KernelDangerousCodeInjection:INTERNAL=OFF
KernelDangerousCodeInjection_DISABLED:INTERNAL=TRUE
//Enable debug facilities (symbols and assertions) in the kernel
KernelDebugBuild:INTERNAL=OFF
KernelDebugBuild_DISABLED:INTERNAL=TRUE
KernelEnableBenchmarks:INTERNAL=OFF
KernelEnableSMPSupport:INTERNAL=OFF
//STRINGS property for variable: KernelFPU
KernelFPU-STRINGS:INTERNAL=XSAVE;FXSAVE
KernelFPUFXSave:INTERNAL=OFF
KernelFPUXSave:INTERNAL=ON
KernelFPU_all_strings:INTERNAL=XSAVE;FXSAVE
//STRINGS property for variable: KernelFSGSBase
KernelFSGSBase-STRINGS:INTERNAL=inst;msr
KernelFSGSBaseInst:INTERNAL=ON
KernelFSGSBaseMSR:INTERNAL=OFF
KernelFSGSBase_all_strings:INTERNAL=inst;gdt;msr
KernelHaveFPU:INTERNAL=ON
//STRINGS property for variable: KernelIRQController
KernelIRQController-STRINGS:INTERNAL=IOAPIC;PIC
KernelIRQControllerIOAPIC:INTERNAL=ON
KernelIRQControllerPIC:INTERNAL=OFF
KernelIRQController_all_strings:INTERNAL=IOAPIC;PIC
//seL4 does not properly check for and handle spurious interrupts.
// This can result     in unnecessary output from the kernel during
// debug builds. If you are CERTAIN these     messages are benign
// then use this config to turn them off.
KernelIRQReporting:INTERNAL=OFF
KernelIRQReporting_DISABLED:INTERNAL=TRUE
//Allows the kernel to write the userError to the IPC buffer
KernelInvocationReportErrorIPC:INTERNAL=OFF
KernelInvocationReportErrorIPC_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelLAPICMode
KernelLAPICMode-STRINGS:INTERNAL=XAPIC;X2APIC
KernelLAPICModeX2APIC:INTERNAL=OFF
KernelLAPICModeXPAIC:INTERNAL=ON
KernelLAPICMode_all_strings:INTERNAL=XAPIC;X2APIC
KernelLogBuffer:INTERNAL=OFF
KernelMaxNumTracePoints:INTERNAL=0
KernelMaxNumTracePoints_UNAVAILABLE:INTERNAL=ON
KernelMaxVPIDs:INTERNAL=0
KernelMaxVPIDs_UNAVAILABLE:INTERNAL=ON
KernelMultibootGFXDepth_UNAVAILABLE:INTERNAL=ON
KernelMultibootGFXHeight_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelMultibootGFXMode
KernelMultibootGFXMode-STRINGS:INTERNAL=none;text;linear
KernelMultibootGFXModeLinear:INTERNAL=OFF
KernelMultibootGFXModeNone:INTERNAL=ON
KernelMultibootGFXModeText:INTERNAL=OFF
KernelMultibootGFXMode_all_strings:INTERNAL=none;text;linear
KernelMultibootGFXWidth_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelOptimisation
KernelOptimisation-STRINGS:INTERNAL=-O2;-Os;-O0;-O1;-O3
KernelOptimisationO0:INTERNAL=OFF
KernelOptimisationO1:INTERNAL=OFF
KernelOptimisationO2:INTERNAL=ON
KernelOptimisationO3:INTERNAL=OFF
KernelOptimisationOS:INTERNAL=OFF
KernelOptimisation_all_strings:INTERNAL=-O2;-Os;-O0;-O1;-O3
KernelPaddrUserTop:INTERNAL=140737488355328
KernelPlatPC99:INTERNAL=ON
//STRINGS property for variable: KernelPlatform
KernelPlatform-STRINGS:INTERNAL=pc99
KernelPlatform_all_strings:INTERNAL=allwinnerA20;am335x;apq8064;ariane;bcm2711;bcm2837;exynos4;exynos5;fvp;hifive;hikey;imx6;imx7;imx8mq-evk;imx8mm-evk;odroidc2;odroidc4;omap3;pc99;polarfire;qemu-arm-virt;rocketchip;rockpro64;spike;tk1;tqma8xqp1gb;tx1;tx2;zynq7000;zynqmp
//Allow the kernel to print out messages to the serial console
// during bootup and execution.
KernelPrinting:INTERNAL=OFF
KernelPrinting_DISABLED:INTERNAL=TRUE
//STRINGS property for variable: KernelSel4Arch
KernelSel4Arch-STRINGS:INTERNAL=aarch32;aarch64;arm_hyp;riscv32;riscv64;x86_64;ia32
KernelSel4ArchAarch32:INTERNAL=OFF
KernelSel4ArchAarch64:INTERNAL=OFF
KernelSel4ArchArmHyp:INTERNAL=OFF
KernelSel4ArchIA32:INTERNAL=OFF
KernelSel4ArchRiscV32:INTERNAL=OFF
KernelSel4ArchRiscV64:INTERNAL=OFF
KernelSel4ArchX86_64:INTERNAL=ON
KernelSel4Arch_all_strings:INTERNAL=aarch32;aarch64;arm_hyp;riscv32;riscv64;x86_64;ia32
KernelSetTLSBaseSelf:INTERNAL=OFF
KernelStaticMaxPeriodUs_UNAVAILABLE:INTERNAL=ON
//STRINGS property for variable: KernelSyscall
KernelSyscall-STRINGS:INTERNAL=syscall;sysenter
KernelSyscall_all_strings:INTERNAL=syscall;sysenter
//Use logical IDs to broadcast IPI between cores. Not all machines
// support logical     IDs. In xAPIC mode only 8 cores can be addressed
// using logical IDs.
KernelUseLogcalIDs:INTERNAL=OFF
KernelUseLogcalIDs_DISABLED:INTERNAL=TRUE
KernelUserStackTraceLength:INTERNAL=0
KernelUserStackTraceLength_UNAVAILABLE:INTERNAL=ON
KernelUserTop:INTERNAL=0xa0000000
KernelUserTop_UNAVAILABLE:INTERNAL=ON
KernelWcetScale_UNAVAILABLE:INTERNAL=ON
KernelWordSize:INTERNAL=64
KernelX86IBRSAll:INTERNAL=OFF
KernelX86IBRSBasic:INTERNAL=OFF
//STRINGS property for variable: KernelX86IBRSMode
KernelX86IBRSMode-STRINGS:INTERNAL=ibrs_none;ibrs_basic;ibrs_all
KernelX86IBRSMode_all_strings:INTERNAL=ibrs_none;ibrs_stibp;ibrs_basic;ibrs_all
KernelX86IBRSnone:INTERNAL=ON
//STRINGS property for variable: KernelX86MicroArch
KernelX86MicroArch-STRINGS:INTERNAL=nehalem;generic;westmere;sandy;ivy;haswell;broadwell;skylake
KernelX86MicroArchBroadwell:INTERNAL=OFF
KernelX86MicroArchGeneric:INTERNAL=OFF
KernelX86MicroArchHaswell:INTERNAL=OFF
KernelX86MicroArchIvy:INTERNAL=OFF
KernelX86MicroArchNehalem:INTERNAL=ON
KernelX86MicroArchSandy:INTERNAL=OFF
KernelX86MicroArchSkylake:INTERNAL=OFF
KernelX86MicroArchWestmere:INTERNAL=OFF
KernelX86MicroArch_all_strings:INTERNAL=nehalem;generic;westmere;sandy;ivy;haswell;broadwell;skylake
KernelX86SyscallSyscall:INTERNAL=ON
KernelX86SyscallSysenter:INTERNAL=OFF
//STRINGS property for variable: KernelXSave
KernelXSave-STRINGS:INTERNAL=XSAVEOPT;XSAVE;XSAVEC
KernelXSaveXSave:INTERNAL=OFF
KernelXSaveXSaveC:INTERNAL=OFF
KernelXSaveXSaveOpt:INTERNAL=ON
KernelXSave_all_strings:INTERNAL=XSAVEOPT;XSAVE;XSAVEC
//ADVANCED property for variable: OPENSBI_PATH
OPENSBI_PATH-ADVANCED:INTERNAL=1
PYTHON3:INTERNAL=python3
//ADVANCED property for variable: SIMULATE_SCRIPT
SIMULATE_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SKIP_MODIFIES
SKIP_MODIFIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SORRY_BITFIELD_PROOFS
SORRY_BITFIELD_PROOFS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SYSCALL_ID_GEN_PATH
SYSCALL_ID_GEN_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: TLS_ROOTSERVER
TLS_ROOTSERVER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: UIMAGE_TOOL
UIMAGE_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: UMM_TYPES
UMM_TYPES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: XMLLINT_PATH
XMLLINT_PATH-ADVANCED:INTERNAL=1

